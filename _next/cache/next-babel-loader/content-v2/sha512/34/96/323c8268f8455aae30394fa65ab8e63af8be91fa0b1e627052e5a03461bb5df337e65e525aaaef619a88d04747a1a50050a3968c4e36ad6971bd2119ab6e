{"ast":null,"code":"import _defineProperty from \"C:/Forks/networklist-org-main/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"C:/Forks/networklist-org-main/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\Forks\\\\networklist-org-main\\\\components\\\\header\\\\header.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { Typography, Switch, Button } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withTheme } from '@material-ui/core/styles';\nimport WbSunnyOutlinedIcon from '@material-ui/icons/WbSunnyOutlined';\nimport Brightness2Icon from '@material-ui/icons/Brightness2';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { CONNECT_WALLET, TRY_CONNECT_WALLET, ACCOUNT_CONFIGURED } from '../../stores/constants'; // import Unlock from '../unlock'\n\nimport stores from '../../stores';\nimport { formatAddress, getProvider } from '../../utils';\nimport classes from './header.module.css';\nvar StyledSwitch = withStyles(function (theme) {\n  return {\n    root: {\n      width: 58,\n      height: 32,\n      padding: 0,\n      margin: theme.spacing(1)\n    },\n    switchBase: {\n      padding: 1,\n      '&$checked': {\n        transform: 'translateX(28px)',\n        color: '#212529',\n        '& + $track': {\n          backgroundColor: '#ffffff',\n          opacity: 1\n        }\n      },\n      '&$focusVisible $thumb': {\n        color: '#ffffff',\n        border: '6px solid #fff'\n      }\n    },\n    thumb: {\n      width: 24,\n      height: 24\n    },\n    track: {\n      borderRadius: 32 / 2,\n      border: \"1px solid #212529\",\n      backgroundColor: '#212529',\n      opacity: 1,\n      transition: theme.transitions.create(['background-color', 'border'])\n    },\n    checked: {},\n    focusVisible: {}\n  };\n})(function (_ref) {\n  var classes = _ref.classes,\n      props = _objectWithoutProperties(_ref, [\"classes\"]);\n\n  return /*#__PURE__*/_jsxDEV(Switch, _objectSpread({\n    focusVisibleClassName: classes.focusVisible,\n    disableRipple: true,\n    classes: {\n      root: classes.root,\n      switchBase: classes.switchBase,\n      thumb: classes.thumb,\n      track: classes.track,\n      checked: classes.checked\n    }\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, _this);\n});\n\nfunction Header(props) {\n  _s();\n\n  var _useState = useState(null),\n      account = _useState[0],\n      setAccount = _useState[1];\n\n  var _useState2 = useState(props.theme.palette.type === 'dark' ? true : false),\n      darkMode = _useState2[0],\n      setDarkMode = _useState2[1];\n\n  var _useState3 = useState(false),\n      unlockOpen = _useState3[0],\n      setUnlockOpen = _useState3[1];\n\n  useEffect(function () {\n    var accountConfigure = function accountConfigure() {\n      var accountStore = stores.accountStore.getStore('account');\n      setAccount(accountStore);\n    };\n\n    var connectWallet = function connectWallet() {\n      onAddressClicked();\n      stores.dispatcher.dispatch({\n        type: TRY_CONNECT_WALLET\n      });\n    };\n\n    stores.emitter.on(ACCOUNT_CONFIGURED, accountConfigure);\n    stores.emitter.on(CONNECT_WALLET, connectWallet);\n    var accountStore = stores.accountStore.getStore('account');\n    setAccount(accountStore);\n    return function () {\n      stores.emitter.removeListener(ACCOUNT_CONFIGURED, accountConfigure);\n      stores.emitter.removeListener(CONNECT_WALLET, connectWallet);\n    };\n  }, []);\n\n  var handleToggleChange = function handleToggleChange(event, val) {\n    setDarkMode(val);\n    props.changeTheme(val);\n  };\n\n  var onAddressClicked = function onAddressClicked() {\n    stores.dispatcher.dispatch({\n      type: TRY_CONNECT_WALLET\n    });\n  };\n\n  var renderProviderLogo = function renderProviderLogo() {\n    var providerLogoList = {\n      Metamask: 'metamask',\n      imToken: 'imtoken',\n      Wallet: 'metamask'\n    };\n    return providerLogoList[getProvider()];\n  };\n\n  useEffect(function () {\n    var localStorageDarkMode = window.localStorage.getItem('yearn.finance-dark-mode');\n    setDarkMode(localStorageDarkMode ? localStorageDarkMode === 'dark' : false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.headerContainer,\n    children: [props.backClicked && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.backButton,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: props.theme.palette.type === 'light' ? 'primary' : 'secondary',\n        onClick: props.backClicked,\n        disableElevation: true,\n        children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n          fontSize: 'large'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.themeSelectContainer,\n      children: /*#__PURE__*/_jsxDEV(StyledSwitch, {\n        icon: /*#__PURE__*/_jsxDEV(Brightness2Icon, {\n          className: classes.switchIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 18\n        }, this),\n        checkedIcon: /*#__PURE__*/_jsxDEV(WbSunnyOutlinedIcon, {\n          className: classes.switchIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }, this),\n        checked: darkMode,\n        onChange: handleToggleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      disableElevation: true,\n      className: classes.accountButton,\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: onAddressClicked,\n      children: [account && account.address && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\".concat(classes.accountIcon, \" \").concat(classes[renderProviderLogo()])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: account && account.address ? formatAddress(account.address) : 'Connect Wallet'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Header, \"moGLLaNUkGqzXBL114tBMbgN8jI=\");\n\n_c = Header;\nexport default _c2 = withTheme(Header);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Forks/networklist-org-main/components/header/header.js"],"names":["React","useState","useEffect","Typography","Switch","Button","withStyles","withTheme","WbSunnyOutlinedIcon","Brightness2Icon","ArrowBackIcon","CONNECT_WALLET","TRY_CONNECT_WALLET","ACCOUNT_CONFIGURED","stores","formatAddress","getProvider","classes","StyledSwitch","theme","root","width","height","padding","margin","spacing","switchBase","transform","color","backgroundColor","opacity","border","thumb","track","borderRadius","transition","transitions","create","checked","focusVisible","props","Header","account","setAccount","palette","type","darkMode","setDarkMode","unlockOpen","setUnlockOpen","accountConfigure","accountStore","getStore","connectWallet","onAddressClicked","dispatcher","dispatch","emitter","on","removeListener","handleToggleChange","event","val","changeTheme","renderProviderLogo","providerLogoList","Metamask","imToken","Wallet","localStorageDarkMode","window","localStorage","getItem","headerContainer","backClicked","backButton","themeSelectContainer","switchIcon","accountButton","address","accountIcon"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { Typography, Switch, Button } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport WbSunnyOutlinedIcon from '@material-ui/icons/WbSunnyOutlined';\nimport Brightness2Icon from '@material-ui/icons/Brightness2';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nimport {\n  CONNECT_WALLET,\n  TRY_CONNECT_WALLET,\n  ACCOUNT_CONFIGURED\n} from '../../stores/constants'\n\n// import Unlock from '../unlock'\n\nimport stores from '../../stores'\nimport { formatAddress, getProvider } from '../../utils'\n\nimport classes from './header.module.css'\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 58,\n    height: 32,\n    padding: 0,\n    margin: theme.spacing(1),\n  },\n  switchBase: {\n    padding: 1,\n    '&$checked': {\n      transform: 'translateX(28px)',\n      color: '#212529',\n      '& + $track': {\n        backgroundColor: '#ffffff',\n        opacity: 1,\n      },\n    },\n    '&$focusVisible $thumb': {\n      color: '#ffffff',\n      border: '6px solid #fff',\n    }\n  },\n  thumb: {\n    width: 24,\n    height: 24,\n  },\n  track: {\n    borderRadius: 32 / 2,\n    border: `1px solid #212529`,\n    backgroundColor: '#212529',\n    opacity: 1,\n    transition: theme.transitions.create(['background-color', 'border']),\n  },\n  checked: {},\n  focusVisible: {},\n}))(({ classes, ...props }) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked,\n      }}\n      {...props}\n    />\n  );\n});\n\nfunction Header(props) {\n\n  const [ account, setAccount ] = useState(null)\n  const [ darkMode, setDarkMode ] = useState(props.theme.palette.type === 'dark' ? true : false);\n  const [ unlockOpen, setUnlockOpen ] = useState(false);\n\n  useEffect(() => {\n    const accountConfigure = () => {\n      const accountStore = stores.accountStore.getStore('account')\n      setAccount(accountStore)\n    }\n    const connectWallet = () => {\n      onAddressClicked()\n      stores.dispatcher.dispatch({ type: TRY_CONNECT_WALLET })\n    }\n\n    stores.emitter.on(ACCOUNT_CONFIGURED, accountConfigure)\n    stores.emitter.on(CONNECT_WALLET, connectWallet)\n\n\n    const accountStore = stores.accountStore.getStore('account')\n    setAccount(accountStore)\n\n    return () => {\n      stores.emitter.removeListener(ACCOUNT_CONFIGURED, accountConfigure)\n      stores.emitter.removeListener(CONNECT_WALLET, connectWallet)\n    }\n  }, [])\n\n  const handleToggleChange = (event, val) => {\n    setDarkMode(val)\n    props.changeTheme(val)\n  }\n\n  const onAddressClicked = () => {\n    stores.dispatcher.dispatch({ type: TRY_CONNECT_WALLET })\n  }\n\n  const renderProviderLogo = () => {\n    const providerLogoList = {\n      Metamask: 'metamask',\n      imToken: 'imtoken',\n      Wallet: 'metamask',\n    }\n    return providerLogoList[getProvider()]\n  }\n\n  useEffect(function() {\n    const localStorageDarkMode = window.localStorage.getItem('yearn.finance-dark-mode')\n    setDarkMode(localStorageDarkMode ? localStorageDarkMode === 'dark' : false)\n  },[]);\n\n  return (\n    <div className={ classes.headerContainer }>\n      { props.backClicked && (\n        <div className={ classes.backButton }>\n          <Button\n          color={ props.theme.palette.type === 'light' ? 'primary' : 'secondary' }\n          onClick={ props.backClicked }\n            disableElevation\n            >\n            <ArrowBackIcon fontSize={ 'large' } />\n          </Button>\n        </div>\n      )}\n      <div className={ classes.themeSelectContainer }>\n        <StyledSwitch\n          icon={ <Brightness2Icon className={ classes.switchIcon }/> }\n          checkedIcon={ <WbSunnyOutlinedIcon className={ classes.switchIcon }/> }\n          checked={ darkMode }\n          onChange={ handleToggleChange }\n        />\n      </div>\n      <Button\n        disableElevation\n        className={ classes.accountButton }\n        variant='contained'\n        color='secondary'\n        onClick={ onAddressClicked }\n        >\n        { account && account.address && <div className={ `${classes.accountIcon} ${classes[renderProviderLogo()]}` }></div>}\n        <Typography variant='h5'>{ (account && account.address)? formatAddress(account.address) : 'Connect Wallet' }</Typography>\n      </Button>\n    </div>\n  )\n}\n\nexport default withTheme(Header)\n"]},"metadata":{},"sourceType":"module"}