{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Forks\\\\networklist-org-main\\\\components\\\\header\\\\header.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { Typography, Switch, Button } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withTheme } from '@material-ui/core/styles';\nimport WbSunnyOutlinedIcon from '@material-ui/icons/WbSunnyOutlined';\nimport Brightness2Icon from '@material-ui/icons/Brightness2';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { CONNECT_WALLET, TRY_CONNECT_WALLET, ACCOUNT_CONFIGURED } from '../../stores/constants'; // import Unlock from '../unlock'\n\nimport stores from '../../stores';\nimport { formatAddress, getProvider } from '../../utils';\nimport classes from './header.module.css';\nconst StyledSwitch = withStyles(theme => ({\n  root: {\n    width: 58,\n    height: 32,\n    padding: 0,\n    margin: theme.spacing(1)\n  },\n  switchBase: {\n    padding: 1,\n    '&$checked': {\n      transform: 'translateX(28px)',\n      color: '#212529',\n      '& + $track': {\n        backgroundColor: '#ffffff',\n        opacity: 1\n      }\n    },\n    '&$focusVisible $thumb': {\n      color: '#ffffff',\n      border: '6px solid #fff'\n    }\n  },\n  thumb: {\n    width: 24,\n    height: 24\n  },\n  track: {\n    borderRadius: 32 / 2,\n    border: `1px solid #212529`,\n    backgroundColor: '#212529',\n    opacity: 1,\n    transition: theme.transitions.create(['background-color', 'border'])\n  },\n  checked: {},\n  focusVisible: {}\n}))((_ref) => {\n  let {\n    classes\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"classes\"]);\n\n  return /*#__PURE__*/_jsxDEV(Switch, _objectSpread({\n    focusVisibleClassName: classes.focusVisible,\n    disableRipple: true,\n    classes: {\n      root: classes.root,\n      switchBase: classes.switchBase,\n      thumb: classes.thumb,\n      track: classes.track,\n      checked: classes.checked\n    }\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n});\n\nfunction Header(props) {\n  const {\n    0: account,\n    1: setAccount\n  } = useState(null);\n  const {\n    0: darkMode,\n    1: setDarkMode\n  } = useState(props.theme.palette.type === 'dark' ? true : false);\n  const {\n    0: unlockOpen,\n    1: setUnlockOpen\n  } = useState(false);\n  useEffect(() => {\n    const accountConfigure = () => {\n      const accountStore = stores.accountStore.getStore('account');\n      setAccount(accountStore);\n    };\n\n    const connectWallet = () => {\n      onAddressClicked();\n      stores.dispatcher.dispatch({\n        type: TRY_CONNECT_WALLET\n      });\n    };\n\n    stores.emitter.on(ACCOUNT_CONFIGURED, accountConfigure);\n    stores.emitter.on(CONNECT_WALLET, connectWallet);\n    const accountStore = stores.accountStore.getStore('account');\n    setAccount(accountStore);\n    return () => {\n      stores.emitter.removeListener(ACCOUNT_CONFIGURED, accountConfigure);\n      stores.emitter.removeListener(CONNECT_WALLET, connectWallet);\n    };\n  }, []);\n\n  const handleToggleChange = (event, val) => {\n    setDarkMode(val);\n    props.changeTheme(val);\n  };\n\n  const onAddressClicked = () => {\n    stores.dispatcher.dispatch({\n      type: TRY_CONNECT_WALLET\n    });\n  };\n\n  const renderProviderLogo = () => {\n    const providerLogoList = {\n      Metamask: 'metamask',\n      imToken: 'imtoken',\n      Wallet: 'metamask'\n    };\n    return providerLogoList[getProvider()];\n  };\n\n  useEffect(function () {\n    const localStorageDarkMode = window.localStorage.getItem('yearn.finance-dark-mode');\n    setDarkMode(localStorageDarkMode ? localStorageDarkMode === 'dark' : false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.headerContainer,\n    children: [props.backClicked && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.backButton,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: props.theme.palette.type === 'light' ? 'primary' : 'secondary',\n        onClick: props.backClicked,\n        disableElevation: true,\n        children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n          fontSize: 'large'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.themeSelectContainer,\n      children: /*#__PURE__*/_jsxDEV(StyledSwitch, {\n        icon: /*#__PURE__*/_jsxDEV(Brightness2Icon, {\n          className: classes.switchIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 18\n        }, this),\n        checkedIcon: /*#__PURE__*/_jsxDEV(WbSunnyOutlinedIcon, {\n          className: classes.switchIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }, this),\n        checked: darkMode,\n        onChange: handleToggleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      disableElevation: true,\n      className: classes.accountButton,\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: onAddressClicked,\n      children: [account && account.address && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.accountIcon} ${classes[renderProviderLogo()]}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: account && account.address ? formatAddress(account.address) : 'Connect Wallet'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n\nexport default withTheme(Header);","map":{"version":3,"sources":["C:/Forks/networklist-org-main/components/header/header.js"],"names":["React","useState","useEffect","Typography","Switch","Button","withStyles","withTheme","WbSunnyOutlinedIcon","Brightness2Icon","ArrowBackIcon","CONNECT_WALLET","TRY_CONNECT_WALLET","ACCOUNT_CONFIGURED","stores","formatAddress","getProvider","classes","StyledSwitch","theme","root","width","height","padding","margin","spacing","switchBase","transform","color","backgroundColor","opacity","border","thumb","track","borderRadius","transition","transitions","create","checked","focusVisible","props","Header","account","setAccount","darkMode","setDarkMode","palette","type","unlockOpen","setUnlockOpen","accountConfigure","accountStore","getStore","connectWallet","onAddressClicked","dispatcher","dispatch","emitter","on","removeListener","handleToggleChange","event","val","changeTheme","renderProviderLogo","providerLogoList","Metamask","imToken","Wallet","localStorageDarkMode","window","localStorage","getItem","headerContainer","backClicked","backButton","themeSelectContainer","switchIcon","accountButton","address","accountIcon"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { Typography, Switch, Button } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles';\nimport { withTheme } from '@material-ui/core/styles';\n\nimport WbSunnyOutlinedIcon from '@material-ui/icons/WbSunnyOutlined';\nimport Brightness2Icon from '@material-ui/icons/Brightness2';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nimport {\n  CONNECT_WALLET,\n  TRY_CONNECT_WALLET,\n  ACCOUNT_CONFIGURED\n} from '../../stores/constants'\n\n// import Unlock from '../unlock'\n\nimport stores from '../../stores'\nimport { formatAddress, getProvider } from '../../utils'\n\nimport classes from './header.module.css'\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 58,\n    height: 32,\n    padding: 0,\n    margin: theme.spacing(1),\n  },\n  switchBase: {\n    padding: 1,\n    '&$checked': {\n      transform: 'translateX(28px)',\n      color: '#212529',\n      '& + $track': {\n        backgroundColor: '#ffffff',\n        opacity: 1,\n      },\n    },\n    '&$focusVisible $thumb': {\n      color: '#ffffff',\n      border: '6px solid #fff',\n    }\n  },\n  thumb: {\n    width: 24,\n    height: 24,\n  },\n  track: {\n    borderRadius: 32 / 2,\n    border: `1px solid #212529`,\n    backgroundColor: '#212529',\n    opacity: 1,\n    transition: theme.transitions.create(['background-color', 'border']),\n  },\n  checked: {},\n  focusVisible: {},\n}))(({ classes, ...props }) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked,\n      }}\n      {...props}\n    />\n  );\n});\n\nfunction Header(props) {\n\n  const [ account, setAccount ] = useState(null)\n  const [ darkMode, setDarkMode ] = useState(props.theme.palette.type === 'dark' ? true : false);\n  const [ unlockOpen, setUnlockOpen ] = useState(false);\n\n  useEffect(() => {\n    const accountConfigure = () => {\n      const accountStore = stores.accountStore.getStore('account')\n      setAccount(accountStore)\n    }\n    const connectWallet = () => {\n      onAddressClicked()\n      stores.dispatcher.dispatch({ type: TRY_CONNECT_WALLET })\n    }\n\n    stores.emitter.on(ACCOUNT_CONFIGURED, accountConfigure)\n    stores.emitter.on(CONNECT_WALLET, connectWallet)\n\n\n    const accountStore = stores.accountStore.getStore('account')\n    setAccount(accountStore)\n\n    return () => {\n      stores.emitter.removeListener(ACCOUNT_CONFIGURED, accountConfigure)\n      stores.emitter.removeListener(CONNECT_WALLET, connectWallet)\n    }\n  }, [])\n\n  const handleToggleChange = (event, val) => {\n    setDarkMode(val)\n    props.changeTheme(val)\n  }\n\n  const onAddressClicked = () => {\n    stores.dispatcher.dispatch({ type: TRY_CONNECT_WALLET })\n  }\n\n  const renderProviderLogo = () => {\n    const providerLogoList = {\n      Metamask: 'metamask',\n      imToken: 'imtoken',\n      Wallet: 'metamask',\n    }\n    return providerLogoList[getProvider()]\n  }\n\n  useEffect(function() {\n    const localStorageDarkMode = window.localStorage.getItem('yearn.finance-dark-mode')\n    setDarkMode(localStorageDarkMode ? localStorageDarkMode === 'dark' : false)\n  },[]);\n\n  return (\n    <div className={ classes.headerContainer }>\n      { props.backClicked && (\n        <div className={ classes.backButton }>\n          <Button\n          color={ props.theme.palette.type === 'light' ? 'primary' : 'secondary' }\n          onClick={ props.backClicked }\n            disableElevation\n            >\n            <ArrowBackIcon fontSize={ 'large' } />\n          </Button>\n        </div>\n      )}\n      <div className={ classes.themeSelectContainer }>\n        <StyledSwitch\n          icon={ <Brightness2Icon className={ classes.switchIcon }/> }\n          checkedIcon={ <WbSunnyOutlinedIcon className={ classes.switchIcon }/> }\n          checked={ darkMode }\n          onChange={ handleToggleChange }\n        />\n      </div>\n      <Button\n        disableElevation\n        className={ classes.accountButton }\n        variant='contained'\n        color='secondary'\n        onClick={ onAddressClicked }\n        >\n        { account && account.address && <div className={ `${classes.accountIcon} ${classes[renderProviderLogo()]}` }></div>}\n        <Typography variant='h5'>{ (account && account.address)? formatAddress(account.address) : 'Connect Wallet' }</Typography>\n      </Button>\n    </div>\n  )\n}\n\nexport default withTheme(Header)\n"]},"metadata":{},"sourceType":"module"}