{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Forks\\\\networklist-org-main\\\\pages\\\\_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport SnackbarController from '../components/snackbar';\nimport ShutdownNotice from '../components/shutdownNotice';\nimport stores from '../stores/index.js';\nimport { CONFIGURE } from '../stores/constants';\nimport '../styles/globals.css';\nimport lightTheme from '../theme/light';\nimport darkTheme from '../theme/dark';\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  const {\n    0: themeConfig,\n    1: setThemeConfig\n  } = useState(lightTheme);\n\n  const changeTheme = dark => {\n    setThemeConfig(dark ? darkTheme : lightTheme);\n    localStorage.setItem(\"yearn.finance-dark-mode\", dark ? \"dark\" : \"light\");\n  };\n\n  useEffect(function () {\n    const localStorageDarkMode = window.localStorage.getItem(\"yearn.finance-dark-mode\");\n    changeTheme(localStorageDarkMode ? localStorageDarkMode === \"dark\" : false);\n  }, []);\n  useEffect(function () {\n    stores.dispatcher.dispatch({\n      type: CONFIGURE\n    });\n  }, []);\n  const {\n    0: shutdownNoticeOpen,\n    1: setShutdownNoticeOpen\n  } = useState(true);\n\n  const closeShutdown = () => {\n    setShutdownNoticeOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: themeConfig,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Component, _objectSpread(_objectSpread({}, pageProps), {}, {\n      changeTheme: changeTheme\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SnackbarController, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), shutdownNoticeOpen && /*#__PURE__*/_jsxDEV(ShutdownNotice, {\n      close: closeShutdown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Forks/networklist-org-main/pages/_app.js"],"names":["React","useState","useEffect","ThemeProvider","CssBaseline","SnackbarController","ShutdownNotice","stores","CONFIGURE","lightTheme","darkTheme","MyApp","Component","pageProps","themeConfig","setThemeConfig","changeTheme","dark","localStorage","setItem","localStorageDarkMode","window","getItem","dispatcher","dispatch","type","shutdownNoticeOpen","setShutdownNoticeOpen","closeShutdown"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,OAAOC,kBAAP,MAA+B,wBAA/B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AAEA,SACEC,SADF,QAEO,qBAFP;AAIA,OAAO,uBAAP;AAEA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,OAAOC,SAAP,MAAsB,eAAtB;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACvC,QAAM;AAAA,OAAEC,WAAF;AAAA,OAAeC;AAAf,MAAkCd,QAAQ,CAACQ,UAAD,CAAhD;;AAEA,QAAMO,WAAW,GAAIC,IAAD,IAAU;AAC5BF,IAAAA,cAAc,CAACE,IAAI,GAAGP,SAAH,GAAeD,UAApB,CAAd;AACAS,IAAAA,YAAY,CAACC,OAAb,CAAqB,yBAArB,EAAgDF,IAAI,GAAG,MAAH,GAAY,OAAhE;AACD,GAHD;;AAKAf,EAAAA,SAAS,CAAC,YAAW;AACnB,UAAMkB,oBAAoB,GAAGC,MAAM,CAACH,YAAP,CAAoBI,OAApB,CAC3B,yBAD2B,CAA7B;AAGAN,IAAAA,WAAW,CAACI,oBAAoB,GAAGA,oBAAoB,KAAK,MAA5B,GAAqC,KAA1D,CAAX;AACD,GALQ,EAKN,EALM,CAAT;AAOAlB,EAAAA,SAAS,CAAC,YAAW;AACnBK,IAAAA,MAAM,CAACgB,UAAP,CAAkBC,QAAlB,CAA2B;AAAEC,MAAAA,IAAI,EAAEjB;AAAR,KAA3B;AACD,GAFQ,EAEP,EAFO,CAAT;AAIA,QAAM;AAAA,OAACkB,kBAAD;AAAA,OAAqBC;AAArB,MAA8C1B,QAAQ,CAAC,IAAD,CAA5D;;AACA,QAAM2B,aAAa,GAAG,MAAM;AAC1BD,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD,GAFD;;AAIA,sBACE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAGb,WAAvB;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD,kCAAeD,SAAf;AAA0B,MAAA,WAAW,EAAGG;AAAxC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,YAHF,EAIIU,kBAAkB,iBAClB,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAGE;AAAxB;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;AAED,eAAejB,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport SnackbarController from '../components/snackbar'\nimport ShutdownNotice from '../components/shutdownNotice'\n\nimport stores from '../stores/index.js'\n\nimport {\n  CONFIGURE,\n} from '../stores/constants'\n\nimport '../styles/globals.css'\n\nimport lightTheme from '../theme/light';\nimport darkTheme from '../theme/dark';\n\nfunction MyApp({ Component, pageProps }) {\n  const [ themeConfig, setThemeConfig ] = useState(lightTheme);\n\n  const changeTheme = (dark) => {\n    setThemeConfig(dark ? darkTheme : lightTheme)\n    localStorage.setItem(\"yearn.finance-dark-mode\", dark ? \"dark\" : \"light\");\n  }\n\n  useEffect(function() {\n    const localStorageDarkMode = window.localStorage.getItem(\n      \"yearn.finance-dark-mode\"\n    );\n    changeTheme(localStorageDarkMode ? localStorageDarkMode === \"dark\" : false);\n  }, []);\n\n  useEffect(function() {\n    stores.dispatcher.dispatch({ type: CONFIGURE })\n  },[]);\n\n  const [shutdownNoticeOpen, setShutdownNoticeOpen] = useState(true);\n  const closeShutdown = () => {\n    setShutdownNoticeOpen(false)\n  }\n\n  return (\n    <ThemeProvider theme={ themeConfig }>\n      <CssBaseline />\n      <Component {...pageProps} changeTheme={ changeTheme } />\n      <SnackbarController />\n      { shutdownNoticeOpen &&\n        <ShutdownNotice close={ closeShutdown } />\n      }\n    </ThemeProvider>\n  )\n}\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}