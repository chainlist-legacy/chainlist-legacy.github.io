{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Forks\\\\networklist-org-main\\\\components\\\\chain\\\\chain.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Typography, Paper, Grid, Button, Tooltip } from '@material-ui/core';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { useRouter } from 'next/router';\nimport Web3 from 'web3';\nimport classes from './chain.module.css';\nimport stores from '../../stores/index.js';\nimport { getProvider } from '../../utils';\nimport { ERROR, CONNECT_WALLET, TRY_CONNECT_WALLET, ACCOUNT_CONFIGURED } from '../../stores/constants';\nexport default function Chain(_ref) {\n  _s();\n\n  var chain = _ref.chain;\n  var router = useRouter();\n\n  var _useState = useState(null),\n      account = _useState[0],\n      setAccount = _useState[1];\n\n  useEffect(function () {\n    var accountConfigure = function accountConfigure() {\n      var accountStore = stores.accountStore.getStore('account');\n      setAccount(accountStore);\n    };\n\n    stores.emitter.on(ACCOUNT_CONFIGURED, accountConfigure);\n    var accountStore = stores.accountStore.getStore('account');\n    setAccount(accountStore);\n    return function () {\n      stores.emitter.removeListener(ACCOUNT_CONFIGURED, accountConfigure);\n    };\n  }, []);\n\n  var toHex = function toHex(num) {\n    return '0x' + num.toString(16);\n  };\n\n  var addToNetwork = function addToNetwork() {\n    if (!(account && account.address)) {\n      stores.dispatcher.dispatch({\n        type: TRY_CONNECT_WALLET\n      });\n      return;\n    }\n\n    var params = {\n      chainId: toHex(chain.chainId),\n      // A 0x-prefixed hexadecimal string\n      chainName: chain.name,\n      nativeCurrency: {\n        name: chain.nativeCurrency.name,\n        symbol: chain.nativeCurrency.symbol,\n        // 2-6 characters long\n        decimals: chain.nativeCurrency.decimals\n      },\n      rpcUrls: chain.rpc,\n      blockExplorerUrls: [chain.explorers && chain.explorers.length > 0 && chain.explorers[0].url ? chain.explorers[0].url : chain.infoURL]\n    };\n    window.web3.eth.getAccounts(function (error, accounts) {\n      window.ethereum.request({\n        method: 'wallet_addEthereumChain',\n        params: [params, accounts[0]]\n      }).then(function (result) {\n        console.log(result);\n      })[\"catch\"](function (error) {\n        stores.emitter.emit(ERROR, error.message ? error.message : error);\n        console.log(error);\n      });\n    });\n  };\n\n  var renderProviderText = function renderProviderText() {\n    if (account && account.address) {\n      var providerTextList = {\n        Metamask: 'Add to Metamask',\n        imToken: 'Add to imToken',\n        Wallet: 'Add to Wallet'\n      };\n      return providerTextList[getProvider()];\n    } else {\n      return 'Connect wallet';\n    }\n  };\n\n  if (!chain) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 1,\n    className: classes.chainContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.chainNameContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/connectors/icn-asd.svg\",\n        onError: function onError(e) {\n          e.target.onerror = null;\n          e.target.src = \"/chains/unknown-logo.png\";\n        },\n        width: 28,\n        height: 28,\n        className: classes.avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: chain.name,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          className: classes.name,\n          noWrap: true,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: chain.infoURL,\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: chain.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.chainInfoContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.dataPoint,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          color: \"textSecondary\",\n          className: classes.dataPointHeader,\n          children: \"ChainID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: chain.chainId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.dataPoint,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          color: \"textSecondary\",\n          className: classes.dataPointHeader,\n          children: \"Currency\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: chain.nativeCurrency ? chain.nativeCurrency.symbol : 'none'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.addButton,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: addToNetwork,\n        children: renderProviderText()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, chain.chainId, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chain, \"KSPiClSXoWSEU+JzHu2UngKl3N8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Chain;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chain\");","map":{"version":3,"sources":["C:/Forks/networklist-org-main/components/chain/chain.js"],"names":["React","useState","useEffect","Typography","Paper","Grid","Button","Tooltip","Skeleton","useRouter","Web3","classes","stores","getProvider","ERROR","CONNECT_WALLET","TRY_CONNECT_WALLET","ACCOUNT_CONFIGURED","Chain","chain","router","account","setAccount","accountConfigure","accountStore","getStore","emitter","on","removeListener","toHex","num","toString","addToNetwork","address","dispatcher","dispatch","type","params","chainId","chainName","name","nativeCurrency","symbol","decimals","rpcUrls","rpc","blockExplorerUrls","explorers","length","url","infoURL","window","web3","eth","getAccounts","error","accounts","ethereum","request","method","then","result","console","log","emit","message","renderProviderText","providerTextList","Metamask","imToken","Wallet","chainContainer","chainNameContainer","e","target","onerror","src","avatar","chainInfoContainer","dataPoint","dataPointHeader","addButton"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Typography, Paper, Grid, Button, Tooltip } from '@material-ui/core'\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { useRouter } from 'next/router'\nimport Web3 from 'web3';\n\nimport classes from './chain.module.css'\n\nimport stores from '../../stores/index.js'\nimport { getProvider } from '../../utils'\n\nimport {\n  ERROR,\n  CONNECT_WALLET,\n  TRY_CONNECT_WALLET,\n  ACCOUNT_CONFIGURED\n} from '../../stores/constants'\n\nexport default function Chain({ chain }) {\n  const router = useRouter()\n\n  const [ account, setAccount ] = useState(null)\n\n  useEffect(() => {\n    const accountConfigure = () => {\n      const accountStore = stores.accountStore.getStore('account')\n      setAccount(accountStore)\n    }\n\n    stores.emitter.on(ACCOUNT_CONFIGURED, accountConfigure)\n\n    const accountStore = stores.accountStore.getStore('account')\n    setAccount(accountStore)\n\n    return () => {\n      stores.emitter.removeListener(ACCOUNT_CONFIGURED, accountConfigure)\n    }\n  }, [])\n\n  const toHex = (num) => {\n    return '0x'+num.toString(16)\n  }\n\n  const addToNetwork = () => {\n    if(!(account && account.address)) {\n      stores.dispatcher.dispatch({ type: TRY_CONNECT_WALLET })\n      return\n    }\n\n    const params = {\n      chainId: toHex(chain.chainId), // A 0x-prefixed hexadecimal string\n      chainName: chain.name,\n      nativeCurrency: {\n        name: chain.nativeCurrency.name,\n        symbol: chain.nativeCurrency.symbol, // 2-6 characters long\n        decimals: chain.nativeCurrency.decimals,\n      },\n      rpcUrls: chain.rpc,\n      blockExplorerUrls: [ ((chain.explorers && chain.explorers.length > 0 && chain.explorers[0].url) ? chain.explorers[0].url : chain.infoURL) ]\n    }\n\n    window.web3.eth.getAccounts((error, accounts) => {\n      window.ethereum.request({\n        method: 'wallet_addEthereumChain',\n        params: [params, accounts[0]],\n      })\n      .then((result) => {\n        console.log(result)\n      })\n      .catch((error) => {\n        stores.emitter.emit(ERROR, error.message ? error.message : error)\n        console.log(error)\n      });\n    })\n  }\n\n  const renderProviderText = () => {\n\n    if(account && account.address) {\n      const providerTextList = {\n        Metamask: 'Add to Metamask',\n        imToken: 'Add to imToken',\n        Wallet: 'Add to Wallet'\n      }\n      return providerTextList[getProvider()]\n    } else {\n      return 'Connect wallet'\n    }\n\n  }\n\n  if(!chain) {\n    return <div></div>\n  }\n\n  return (\n    <Paper elevation={ 1 } className={ classes.chainContainer } key={ chain.chainId }>\n      <div className={ classes.chainNameContainer }>\n        <img\n          src='/connectors/icn-asd.svg'\n          onError={e => {\n            e.target.onerror = null;\n            e.target.src = \"/chains/unknown-logo.png\";\n          }}\n          width={ 28 }\n          height={ 28 }\n          className={ classes.avatar }\n        />\n        <Tooltip title={ chain.name }>\n          <Typography variant='h3' className={ classes.name } noWrap>\n            <a href={ chain.infoURL } target=\"_blank\" rel=\"noreferrer\">\n              { chain.name }\n            </a>\n          </Typography>\n        </Tooltip>\n      </div>\n      <div className={ classes.chainInfoContainer }>\n        <div className={ classes.dataPoint }>\n          <Typography variant='subtitle1' color='textSecondary' className={ classes.dataPointHeader} >ChainID</Typography>\n          <Typography variant='h5'>{ chain.chainId }</Typography>\n        </div>\n        <div className={ classes.dataPoint }>\n          <Typography variant='subtitle1' color='textSecondary' className={ classes.dataPointHeader}>Currency</Typography>\n          <Typography variant='h5'>{ chain.nativeCurrency ? chain.nativeCurrency.symbol : 'none' }</Typography>\n        </div>\n      </div>\n      <div className={ classes.addButton }>\n        <Button\n          variant='outlined'\n          color='primary'\n          onClick={ addToNetwork }\n        >\n          { renderProviderText() }\n        </Button>\n      </div>\n    </Paper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}