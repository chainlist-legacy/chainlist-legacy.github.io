{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Forks\\\\networklist-org-main\\\\components\\\\snackbar\\\\snackbarController.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { withStyles } from '@material-ui/core/styles';\nimport Snackbar from './snackbar.jsx';\nimport { ERROR, TX_SUBMITTED } from '../../stores/constants';\nimport stores from \"../../stores\";\nconst emitter = stores.emitter;\n\nconst styles = theme => ({\n  root: {}\n});\n\nclass SnackbarController extends Component {\n  constructor(props) {\n    super();\n\n    _defineProperty(this, \"showError\", error => {\n      const snackbarObj = {\n        snackbarMessage: null,\n        snackbarType: null,\n        open: false\n      };\n      this.setState(snackbarObj);\n      const that = this;\n      setTimeout(() => {\n        const snackbarObj = {\n          snackbarMessage: error.toString(),\n          snackbarType: 'Error',\n          open: true\n        };\n        that.setState(snackbarObj);\n      });\n    });\n\n    _defineProperty(this, \"showHash\", txHash => {\n      const snackbarObj = {\n        snackbarMessage: null,\n        snackbarType: null,\n        open: false\n      };\n      this.setState(snackbarObj);\n      const that = this;\n      setTimeout(() => {\n        const snackbarObj = {\n          snackbarMessage: txHash,\n          snackbarType: 'Hash',\n          open: true\n        };\n        that.setState(snackbarObj);\n      });\n    });\n\n    this.state = {\n      open: false,\n      snackbarType: null,\n      snackbarMessage: null\n    };\n  }\n\n  componentWillMount() {\n    emitter.on(ERROR, this.showError);\n    emitter.on(TX_SUBMITTED, this.showHash);\n  }\n\n  componentWillUnmount() {\n    emitter.removeListener(ERROR, this.showError);\n    emitter.removeListener(TX_SUBMITTED, this.showHash);\n  }\n\n  render() {\n    const {\n      snackbarType,\n      snackbarMessage,\n      open\n    } = this.state;\n\n    if (open) {\n      return /*#__PURE__*/_jsxDEV(Snackbar, {\n        type: snackbarType,\n        message: snackbarMessage,\n        open: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n}\n\nexport default withStyles(styles)(SnackbarController);","map":{"version":3,"sources":["C:/Forks/networklist-org-main/components/snackbar/snackbarController.jsx"],"names":["React","Component","withStyles","Snackbar","ERROR","TX_SUBMITTED","stores","emitter","styles","theme","root","SnackbarController","constructor","props","error","snackbarObj","snackbarMessage","snackbarType","open","setState","that","setTimeout","toString","txHash","state","componentWillMount","on","showError","showHash","componentWillUnmount","removeListener","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,SACEC,KADF,EAEEC,YAFF,QAGO,wBAHP;AAKA,OAAOC,MAAP,MAAmB,cAAnB;AACA,MAAMC,OAAO,GAAGD,MAAM,CAACC,OAAvB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,IAAI,EAAE;AADiB,CAAL,CAApB;;AAMA,MAAMC,kBAAN,SAAiCV,SAAjC,CAA2C;AAEzCW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;;AADiB,uCAoBNC,KAAD,IAAW;AACrB,YAAMC,WAAW,GAAG;AAAEC,QAAAA,eAAe,EAAE,IAAnB;AAAyBC,QAAAA,YAAY,EAAE,IAAvC;AAA6CC,QAAAA,IAAI,EAAE;AAAnD,OAApB;AACA,WAAKC,QAAL,CAAcJ,WAAd;AAEA,YAAMK,IAAI,GAAG,IAAb;AACAC,MAAAA,UAAU,CAAC,MAAM;AACf,cAAMN,WAAW,GAAG;AAAEC,UAAAA,eAAe,EAAEF,KAAK,CAACQ,QAAN,EAAnB;AAAqCL,UAAAA,YAAY,EAAE,OAAnD;AAA4DC,UAAAA,IAAI,EAAE;AAAlE,SAApB;AACAE,QAAAA,IAAI,CAACD,QAAL,CAAcJ,WAAd;AACD,OAHS,CAAV;AAID,KA7BkB;;AAAA,sCA+BPQ,MAAD,IAAY;AACrB,YAAMR,WAAW,GAAG;AAAEC,QAAAA,eAAe,EAAE,IAAnB;AAAyBC,QAAAA,YAAY,EAAE,IAAvC;AAA6CC,QAAAA,IAAI,EAAE;AAAnD,OAApB;AACA,WAAKC,QAAL,CAAcJ,WAAd;AAEA,YAAMK,IAAI,GAAG,IAAb;AACAC,MAAAA,UAAU,CAAC,MAAM;AACf,cAAMN,WAAW,GAAG;AAAEC,UAAAA,eAAe,EAAEO,MAAnB;AAA2BN,UAAAA,YAAY,EAAE,MAAzC;AAAiDC,UAAAA,IAAI,EAAE;AAAvD,SAApB;AACAE,QAAAA,IAAI,CAACD,QAAL,CAAcJ,WAAd;AACD,OAHS,CAAV;AAID,KAxCkB;;AAGjB,SAAKS,KAAL,GAAa;AACXN,MAAAA,IAAI,EAAE,KADK;AAEXD,MAAAA,YAAY,EAAE,IAFH;AAGXD,MAAAA,eAAe,EAAE;AAHN,KAAb;AAKD;;AAEDS,EAAAA,kBAAkB,GAAG;AACnBlB,IAAAA,OAAO,CAACmB,EAAR,CAAWtB,KAAX,EAAkB,KAAKuB,SAAvB;AACApB,IAAAA,OAAO,CAACmB,EAAR,CAAWrB,YAAX,EAAyB,KAAKuB,QAA9B;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrBtB,IAAAA,OAAO,CAACuB,cAAR,CAAuB1B,KAAvB,EAA8B,KAAKuB,SAAnC;AACApB,IAAAA,OAAO,CAACuB,cAAR,CAAuBzB,YAAvB,EAAqC,KAAKuB,QAA1C;AACD;;AAwBDG,EAAAA,MAAM,GAAG;AACP,UAAM;AACJd,MAAAA,YADI;AAEJD,MAAAA,eAFI;AAGJE,MAAAA;AAHI,QAIF,KAAKM,KAJT;;AAMA,QAAGN,IAAH,EAAS;AACP,0BAAO,QAAC,QAAD;AAAU,QAAA,IAAI,EAAGD,YAAjB;AAAgC,QAAA,OAAO,EAAGD,eAA1C;AAA4D,QAAA,IAAI,EAAG;AAAnE;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO;AACL,0BAAO;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AAEF;;AAzDwC;;AA4D3C,eAAed,UAAU,CAACM,MAAD,CAAV,CAAmBG,kBAAnB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Snackbar from './snackbar.jsx'\n\nimport {\n  ERROR,\n  TX_SUBMITTED,\n} from '../../stores/constants'\n\nimport stores from \"../../stores\";\nconst emitter = stores.emitter\n\nconst styles = theme => ({\n  root: {\n\n  },\n});\n\nclass SnackbarController extends Component {\n\n  constructor(props) {\n    super()\n\n    this.state = {\n      open: false,\n      snackbarType: null,\n      snackbarMessage: null\n    }\n  }\n\n  componentWillMount() {\n    emitter.on(ERROR, this.showError);\n    emitter.on(TX_SUBMITTED, this.showHash);\n  }\n\n  componentWillUnmount() {\n    emitter.removeListener(ERROR, this.showError);\n    emitter.removeListener(TX_SUBMITTED, this.showHash);\n  };\n\n  showError = (error) => {\n    const snackbarObj = { snackbarMessage: null, snackbarType: null, open: false }\n    this.setState(snackbarObj)\n\n    const that = this\n    setTimeout(() => {\n      const snackbarObj = { snackbarMessage: error.toString(), snackbarType: 'Error', open: true }\n      that.setState(snackbarObj)\n    })\n  }\n\n  showHash = (txHash) => {\n    const snackbarObj = { snackbarMessage: null, snackbarType: null, open: false }\n    this.setState(snackbarObj)\n\n    const that = this\n    setTimeout(() => {\n      const snackbarObj = { snackbarMessage: txHash, snackbarType: 'Hash', open: true }\n      that.setState(snackbarObj)\n    })\n  }\n\n  render() {\n    const {\n      snackbarType,\n      snackbarMessage,\n      open\n    } = this.state\n\n    if(open) {\n      return <Snackbar type={ snackbarType } message={ snackbarMessage } open={ true } />\n    } else {\n      return <div></div>\n    }\n\n  };\n}\n\nexport default withStyles(styles)(SnackbarController);\n"]},"metadata":{},"sourceType":"module"}